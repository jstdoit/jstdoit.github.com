<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[{@jstdoit}]]></title>
  <link href="http://jstdoit.github.io/atom.xml" rel="self"/>
  <link href="http://jstdoit.github.io/"/>
  <updated>2013-09-22T23:51:58+08:00</updated>
  <id>http://jstdoit.github.io/</id>
  <author>
    <name><![CDATA[@jstdoit]]></name>
    <email><![CDATA[just_send@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[阿里巴巴笔试]]></title>
    <link href="http://jstdoit.github.io/a-li-ba-ba-bi-shi/"/>
    <updated>2013-09-22T23:47:00+08:00</updated>
    <id>http://jstdoit.github.io/a-li-ba-ba-bi-shi</id>
    <content type="html"><![CDATA[<p>今天参见了阿里巴巴集团的校园招聘北京站的笔试，考的研发岗位。题目内容多设计算法与数据结构方面的东西。感觉这些东西都好久之前的事情了，平时做项目也很少用到那些算法或者数据结构，关注的业务逻辑比较多，所以这笔试答的就马马虎虎吧。</p>

<p>不过感觉如果工作也以这样的形式去考试的话，未免有点不可思议。遇到一些问题总得一段时间去思考最优解，结果卡卡卡这一份卷子上就有好几道问题要让你去给出最优解。要知道平时对一个问题的最优化过程至少也得2小时啊。这一份卷子2小时就要搞那么多最优解，麻烦，只能勉勉强强了，或许是我自己太弱了&hellip;</p>

<p>权当是长见识吧！原来笔试还得交简历！这个真是长见识长大了！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Test Learning]]></title>
    <link href="http://jstdoit.github.io/rails-test-learning/"/>
    <updated>2013-05-14T09:47:00+08:00</updated>
    <id>http://jstdoit.github.io/rails-test-learning</id>
    <content type="html"><![CDATA[<p>As old days I programmed with Ruby, I always test my app by running it, so some problems will not appear until something match.
What I lack is UnitTest and more test technique. With reading the book <em>The rails Way</em> I record my way of learning Rails test technique in this post.</p>

<!--more-->


<p>The built-in test framework in Rails is Test::Unit family of all xUnit. A subclass of Test::Unit::TestCase is the main part of Rails test.
As with other test framework, Rails Test consists of 3 parts: setup, test_body, teardown.</p>

<ul>
<li>setup: <em>In setup we do something prepared for test body. such as initialize an Object etc.</em></li>
<li>test_body: <em>In such test bodys, we do our purpose test work.</em></li>
<li>teardown: <em>In teardown we do something that when test body finished.</em></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Openfire on Ubuntu 12.04 Server]]></title>
    <link href="http://jstdoit.github.io/install-openfire-on-ubuntu-12-dot-04-server/"/>
    <updated>2012-11-30T10:35:00+08:00</updated>
    <id>http://jstdoit.github.io/install-openfire-on-ubuntu-12-dot-04-server</id>
    <content type="html"><![CDATA[<p>Wow! The vines xmpp server annoyed me so much. it&rsquo;s not implemented well, and not tested for concurrent. So i abandon it and changed to Openfire.
when I install Openfire on My ubuntu 12.04 server, met the problem about jre, cos java is bought by Oracle and change some copyright doings, so we cannot find Sun&rsquo;s jre on Ubuntu via <code>apt-get</code> tools, after searching, i found the tool offered by <code>github</code> <a href="https://github.com/flexiondotorg/oab-java6">oab-java6</a> can easily solve the problem of Installing the sun&rsquo;s jre on ubuntu. steps as follows:</p>

<!-- more -->


<ul>
<li><code>wget https://raw.github.com/flexiondotorg/oab-java6/master/oab-java.sh</code></li>
<li><code>chmod +x oab-java.sh</code></li>
<li><code>./oab-java.sh</code></li>
<li>then we can install sun&rsquo;s jre by executing <code>sudo apt-get install sun-java6-jre</code></li>
<li>After install jre, get <a href="http://www.igniterealtime.org/projects/openfire/index.jsp">Openfire</a> from <a href="http://www.igniterealtime.org/downloads/index.jsp">here</a>(Ubuntu&rsquo;s deb version)</li>
<li><code>dpkg -ivh openfire_3.7.1_all.deb</code>
the configuration of Openfire can follow <a href="http://www.igniterealtime.org/builds/openfire/docs/latest/documentation/install-guide.html">here</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[asmack with vines xmpp]]></title>
    <link href="http://jstdoit.github.io/asmack-with-vines-xmpp/"/>
    <updated>2012-11-29T04:23:00+08:00</updated>
    <id>http://jstdoit.github.io/asmack-with-vines-xmpp</id>
    <content type="html"><![CDATA[<p>I am keen to program with Ruby, so i used <a href="http://getvines.com">Vines</a> as my xmpp server, though it is not implemented entirely.
When i use <a href="https://github.com/Flowdalic/asmack">asmack</a> client library to connect to Vines xmpp server, i got this exception:</p>

<!-- more -->




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>11-30 09:36:46.518: W/System.err<span class="o">(</span>2174<span class="o">)</span>: java.security.KeyStoreException: java.security.NoSuchAlgorithmException: KeyStore jks implementation not found
</span><span class='line'>11-30 09:36:46.518: W/System.err<span class="o">(</span>2174<span class="o">)</span>:     at java.security.KeyStore.getInstance<span class="o">(</span>KeyStore.java:119<span class="o">)</span>
</span><span class='line'>11-30 09:36:46.518: W/System.err<span class="o">(</span>2174<span class="o">)</span>:     at org.jivesoftware.smack.ServerTrustManager.&lt;init&gt;<span class="o">(</span>ServerTrustManager.java:71<span class="o">)</span>
</span><span class='line'>11-30 09:36:46.518: W/System.err<span class="o">(</span>2174<span class="o">)</span>:     at org.jivesoftware.smack.XMPPConnection.proceedTLSReceived<span class="o">(</span>XMPPConnection.java:824<span class="o">)</span>
</span><span class='line'>11-30 09:36:46.518: W/System.err<span class="o">(</span>2174<span class="o">)</span>:     at org.jivesoftware.smack.PacketReader.parsePackets<span class="o">(</span>PacketReader.java:262<span class="o">)</span>
</span><span class='line'>11-30 09:36:46.528: W/System.err<span class="o">(</span>2174<span class="o">)</span>:     at org.jivesoftware.smack.PacketReader.access<span class="nv">$000</span><span class="o">(</span>PacketReader.java:43<span class="o">)</span>
</span><span class='line'>11-30 09:36:46.528: W/System.err<span class="o">(</span>2174<span class="o">)</span>:     at org.jivesoftware.smack.PacketReader<span class="nv">$1</span>.run<span class="o">(</span>PacketReader.java:69<span class="o">)</span>
</span><span class='line'>11-30 09:36:46.528: W/System.err<span class="o">(</span>2174<span class="o">)</span>: Caused by: java.security.NoSuchAlgorithmException: KeyStore jks implementation not found
</span><span class='line'>11-30 09:36:46.528: W/System.err<span class="o">(</span>2174<span class="o">)</span>:     at org.apache.harmony.security.fortress.Engine.notFound<span class="o">(</span>Engine.java:177<span class="o">)</span>
</span><span class='line'>11-30 09:36:46.528: W/System.err<span class="o">(</span>2174<span class="o">)</span>:     at org.apache.harmony.security.fortress.Engine.getInstance<span class="o">(</span>Engine.java:151<span class="o">)</span>
</span><span class='line'>11-30 09:36:46.528: W/System.err<span class="o">(</span>2174<span class="o">)</span>:     at java.security.KeyStore.getInstance<span class="o">(</span>KeyStore.java:116<span class="o">)</span>
</span><span class='line'>11-30 09:36:46.538: W/System.err<span class="o">(</span>2174<span class="o">)</span>:     ... 5 more
</span></code></pre></td></tr></table></div></figure>


<p>it seems that the low-version android does not support jks algo, so by adding hack as follows before connection:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">Build</span><span class="o">.</span><span class="na">VERSION</span><span class="o">.</span><span class="na">SDK_INT</span> <span class="o">&gt;=</span> <span class="n">Build</span><span class="o">.</span><span class="na">VERSION_CODES</span><span class="o">.</span><span class="na">ICE_CREAM_SANDWICH</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">config</span><span class="o">.</span><span class="na">setTruststoreType</span><span class="o">(</span><span class="s">&quot;AndroidCAStore&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">config</span><span class="o">.</span><span class="na">setTruststorePassword</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>      <span class="n">config</span><span class="o">.</span><span class="na">setTruststorePath</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">config</span><span class="o">.</span><span class="na">setTruststoreType</span><span class="o">(</span><span class="s">&quot;BKS&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">path</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;javax.net.ssl.trustStore&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">path</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>              <span class="n">path</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;java.home&quot;</span><span class="o">)</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">&quot;etc&quot;</span>
</span><span class='line'>                      <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">&quot;security&quot;</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span>
</span><span class='line'>                      <span class="o">+</span> <span class="s">&quot;cacerts.bks&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">config</span><span class="o">.</span><span class="na">setTruststorePath</span><span class="o">(</span><span class="n">path</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xmpp4r PUBSUB hack]]></title>
    <link href="http://jstdoit.github.io/xmpp4r-pubsub-hack/"/>
    <updated>2012-11-26T06:03:00+08:00</updated>
    <id>http://jstdoit.github.io/xmpp4r-pubsub-hack</id>
    <content type="html"><![CDATA[<p>In my current <a href="http://about.yuncaipu.com">Project</a>, I need to use XMPP sending notification to android client, so I implemented a xmpp server using <a href="http://nodejs.org">Node.js</a>,
and using <a href="http://home.gna.org/xmpp4r/">xmpp4r-0.5</a> to login as publisher to send notification to server. They all work well before i migrated all application to new server.
Whenever I send msg, the xmpp4r always throws exceptions. Below is the trace:</p>

<!-- more -->




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>W, <span class="o">[</span>2012-11-26T11:59:55.734074 <span class="c">#29746]  WARN -- : EXCEPTION:</span>
</span><span class='line'>    REXML::UndefinedNamespaceException
</span><span class='line'>    Undefined prefix stream found
</span><span class='line'>    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/rexml/parsers/baseparser.rb:406:in <span class="sb">`</span>block in pull_event<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/set.rb:222:in `block in each&#39;</span>
</span><span class='line'>    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/set.rb:222:in <span class="sb">`</span>each_key<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/set.rb:222:in `each&#39;</span>
</span><span class='line'>    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/rexml/parsers/baseparser.rb:404:in <span class="sb">`</span>pull_event<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/rexml/parsers/baseparser.rb:183:in `pull&#39;</span>
</span><span class='line'>    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/rexml/parsers/sax2parser.rb:92:in <span class="sb">`</span>parse<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/streamparser.rb:79:in `parse&#39;</span>
</span><span class='line'>    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/stream.rb:75:in <span class="sb">`</span>block in start<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     W, [2012-11-26T11:59:55.734243 #29746]  WARN -- : EXCEPTION:</span>
</span><span class='line'><span class="s1">    TypeError</span>
</span><span class='line'><span class="s1">    can&#39;</span>t convert REXML::UndefinedNamespaceException into String
</span><span class='line'>    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/stream.rb:137:in <span class="sb">`</span>+<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/stream.rb:137:in `parse_failure&#39;</span>
</span><span class='line'>    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/streamparser.rb:81:in <span class="sb">`</span>rescue in parse<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/streamparser.rb:38:in `parse&#39;</span>
</span><span class='line'>    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/stream.rb:75:in <span class="sb">`</span>block in start<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     W, [2012-11-26T11:59:55.734326 #29746]  WARN -- : Exception caught in Parser thread! (TypeError)</span>
</span><span class='line'><span class="s1">    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/stream.rb:137:in `+&#39;</span>
</span><span class='line'>    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/stream.rb:137:in <span class="sb">`</span>parse_failure<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/streamparser.rb:81:in `rescue in parse&#39;</span>
</span><span class='line'>    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/streamparser.rb:38:in <span class="sb">`</span>parse<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">    /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/stream.rb:75:in `block in start&#39;</span>
</span><span class='line'>  /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/thread.rb:71:in <span class="sb">`</span>sleep<span class="s1">&#39;: deadlock detected (fatal)</span>
</span><span class='line'><span class="s1"> from /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/thread.rb:71:in `wait&#39;</span>
</span><span class='line'>  from /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/semaphore.rb:24:in <span class="sb">`</span>block in <span class="nb">wait</span><span class="s1">&#39;</span>
</span><span class='line'><span class="s1"> from &lt;internal:prelude&gt;:10:in `synchronize&#39;</span>
</span><span class='line'>  from /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/semaphore.rb:23:in <span class="sb">`</span><span class="nb">wait</span><span class="s1">&#39;</span>
</span><span class='line'><span class="s1"> from /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/stream.rb:331:in `wait&#39;</span>
</span><span class='line'>  from /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/stream.rb:398:in <span class="sb">`</span>send<span class="s1">&#39;</span>
</span><span class='line'><span class="s1"> from /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/client.rb:88:in `start&#39;</span>
</span><span class='line'>  from /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/client.rb:175:in <span class="sb">`</span>auth_sasl<span class="s1">&#39;</span>
</span><span class='line'><span class="s1"> from /usr/local/rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/xmpp4r/client.rb:112:in `auth&#39;</span>
</span><span class='line'>  from ./pub-just:18:in <span class="sb">`</span>&lt;main&gt;<span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Of course I don&rsquo;t think that Ruby&rsquo;s sax2parser makes my app go wrong. So I checked the xmpp4r&rsquo;s code. From the exception , i can find that tha problem occurs after the <code>auth</code> stanza,
then I checked the src-code from <code>XMPP4R_GEM_PATH/client.rb</code>, and find the code after auth.</p>

<figure class='code'><figcaption><span>&#8220;XMPP4R_GEM_PATH/client.rb&#8221; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">auth_sasl</span><span class="p">(</span><span class="n">sasl</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</span><span class='line'>  <span class="n">sasl</span><span class="o">.</span><span class="n">auth</span><span class="p">(</span><span class="n">password</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># Restart stream after SASL auth</span>
</span><span class='line'>  <span class="n">stop</span>
</span><span class='line'>  <span class="n">start</span>
</span><span class='line'>  <span class="c1"># And wait for features - again</span>
</span><span class='line'>  <span class="vi">@features_sem</span><span class="o">.</span><span class="n">wait</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Resource binding (RFC3920 - 7)</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@stream_features</span><span class="o">.</span><span class="n">has_key?</span> <span class="s1">&#39;bind&#39;</span>
</span><span class='line'>      <span class="vi">@jid</span> <span class="o">=</span> <span class="n">bind</span><span class="p">(</span><span class="vi">@jid</span><span class="o">.</span><span class="n">resource</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Session starting</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@stream_features</span><span class="o">.</span><span class="n">has_key?</span> <span class="s1">&#39;session&#39;</span>
</span><span class='line'>      <span class="n">iq</span> <span class="o">=</span> <span class="no">Iq</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:set</span><span class="p">)</span>
</span><span class='line'>      <span class="n">session</span> <span class="o">=</span> <span class="n">iq</span><span class="o">.</span><span class="n">add</span> <span class="no">REXML</span><span class="o">::</span><span class="no">Element</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;session&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">session</span><span class="o">.</span><span class="n">add_namespace</span> <span class="vi">@stream_features</span><span class="o">[</span><span class="s1">&#39;session&#39;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">send_with_id</span><span class="p">(</span><span class="n">iq</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>there is one <code>stop</code> and <code>start</code> after auth. So I traced the <code>stop</code> and <code>start</code>, and found the <code>stop</code> implemented in file <code>XMPP4R_GEM_PATH/stream.rb</code> as follows:</p>

<figure class='code'><figcaption><span>&#8220;XMPP4R_GEM_PATH/stream.rb&#8221; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">stop</span>
</span><span class='line'>  <span class="vi">@parser_thread</span><span class="o">.</span><span class="n">kill</span>
</span><span class='line'>  <span class="vi">@parser</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>and the <code>@parser_thread</code> is obviously a Thread, so the problem must be caused by the thread&rsquo;s mech, it must be when the thread&rsquo;s not being killed entirely we call the method <code>start</code>, so I hacked the code via add a line <code>while @parser_thread.alive? do end</code> and modify the code above in file <code>XMPP4R_GEM_PATH/client.rb</code> as follows:</p>

<figure class='code'><figcaption><span>&#8220;XMPP4R_GEM_PATH/client.rb&#8221; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">auth_sasl</span><span class="p">(</span><span class="n">sasl</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</span><span class='line'>  <span class="n">sasl</span><span class="o">.</span><span class="n">auth</span><span class="p">(</span><span class="n">password</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># Restart stream after SASL auth</span>
</span><span class='line'>  <span class="n">stop</span>
</span><span class='line'>  <span class="k">while</span> <span class="vi">@parser_thread</span><span class="o">.</span><span class="n">alive?</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">start</span>
</span><span class='line'>  <span class="c1"># And wait for features - again</span>
</span><span class='line'>  <span class="vi">@features_sem</span><span class="o">.</span><span class="n">wait</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Resource binding (RFC3920 - 7)</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@stream_features</span><span class="o">.</span><span class="n">has_key?</span> <span class="s1">&#39;bind&#39;</span>
</span><span class='line'>      <span class="vi">@jid</span> <span class="o">=</span> <span class="n">bind</span><span class="p">(</span><span class="vi">@jid</span><span class="o">.</span><span class="n">resource</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Session starting</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@stream_features</span><span class="o">.</span><span class="n">has_key?</span> <span class="s1">&#39;session&#39;</span>
</span><span class='line'>      <span class="n">iq</span> <span class="o">=</span> <span class="no">Iq</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:set</span><span class="p">)</span>
</span><span class='line'>      <span class="n">session</span> <span class="o">=</span> <span class="n">iq</span><span class="o">.</span><span class="n">add</span> <span class="no">REXML</span><span class="o">::</span><span class="no">Element</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;session&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">session</span><span class="o">.</span><span class="n">add_namespace</span> <span class="vi">@stream_features</span><span class="o">[</span><span class="s1">&#39;session&#39;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">send_with_id</span><span class="p">(</span><span class="n">iq</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Until now, my code is working normally, hope this help you someday.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Whenever to make Cron task]]></title>
    <link href="http://jstdoit.github.io/use-whenever-to-make-cron-task/"/>
    <updated>2012-11-23T22:37:00+08:00</updated>
    <id>http://jstdoit.github.io/use-whenever-to-make-cron-task</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/javan/whenever">https://github.com/javan/whenever</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sync Data Between Servers]]></title>
    <link href="http://jstdoit.github.io/sync-data-between-servers/"/>
    <updated>2012-11-23T10:51:00+08:00</updated>
    <id>http://jstdoit.github.io/sync-data-between-servers</id>
    <content type="html"><![CDATA[<p>Finishing configuring the new server, i need to migrate all business-data from prev-server to the new one.
Wow! I think I don&rsquo;t know how to sync data realtime between servers, so I just <code>scp -r</code> all the data to the
new server&hellip; ehh, I know it&rsquo;s now a good solution, but i don&rsquo;t know how.</p>

<!-- more -->


<p><img src="http://jstdoit.github.io/images/scp-ss.png" title="Screenshot for scp" alt="screenshot" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Switch to RedHat 5.4]]></title>
    <link href="http://jstdoit.github.io/switch-to-redhat/"/>
    <updated>2012-11-22T15:45:00+08:00</updated>
    <id>http://jstdoit.github.io/switch-to-redhat</id>
    <content type="html"><![CDATA[<p>these days, my boss asked me to transfer all our application to a server backed by RedHat 5.4 from Ubuntu, what a mass!
these is no <code>apt</code> tools anymore on the new server, i just cannot adapt my life to next days without <code>apt</code> tools. Whatever, i need to install these software:
<code>git</code>, <code>nodejs</code>, <code>ruby</code>, <code>nginx with passenger</code> for rails&#8217; deploy&hellip;</p>

<!-- more -->


<ul>
<li>all things goes fine, but the when i run <code>gem</code>, it alerts me with msg <code>It seems your ruby installation is missing psych (for YAML output). To eliminate this warning, please install libyaml and reinstall your ruby.</code>, ooooh! i never met such problem on Ubuntu&hellip;
I found that <code>rvm</code> gives me an option for install <code>libyaml</code> by running <code>rvm pkg install libyaml</code>, then <code>rvm reinstall 1.9.3</code>, but warning still exists.
:&ndash;( then I should abandon the RVM, and install ruby via src-code.</li>
<li>first install <code>libyaml</code></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz
</span><span class='line'>$ tar xzvf yaml-0.1.4.tar.gz
</span><span class='line'>$ cd yaml-0.1.4
</span><span class='line'>$ ./configure --prefix=/usr/local
</span><span class='line'>$ make
</span><span class='line'>$ make install</span></code></pre></td></tr></table></div></figure>


<ul>
<li>then install <code>ruby</code></li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p0.tar.gz
</span><span class='line'><span class="nv">$ </span>tar xzvf ruby-1.9.3-p0.tar.gz
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>ruby-1.9.3-p0
</span><span class='line'><span class="nv">$ </span>./configure --prefix<span class="o">=</span>/usr/local --enable-shared --disable-install-doc --with-opt-dir<span class="o">=</span>/usr/local/lib
</span><span class='line'><span class="nv">$ </span>make
</span><span class='line'><span class="nv">$ </span>make install
</span></code></pre></td></tr></table></div></figure>


<p>Finally, the world is clear!</p>

<hr />

<p>Next to install rmagick, when i execute following command: <code>yum install ImageMagick-devel ImageMagick-c++-devel</code>, my system alerts me with msg <code>Warning: Found a partial ImageMagick installation. Your operating system likely has some built-in ImageMagick libraries but not all of ImageMagick. This will most likely cause problems at both compile and runtime.</code> it seems that the the <code>ImageMagick</code> version was to old on RedHat 5.4, after searching the web, i found <a href="https://github.com/hammackj/risu/issues/55">Solve</a>, and commands as follows:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum remove ImageMagick
</span><span class='line'>wget ftp://ftp.imagemagick.org/pub/ImageMagick/ImageMagick.tar.gz
</span><span class='line'>tar -zxvf Imagemagick.tar.gz
</span><span class='line'><span class="nb">cd </span>Imagemagick-6.7.6-8
</span><span class='line'>./configure; make; make install
</span><span class='line'>
</span><span class='line'>Then i got the problem magickwand.h not found or w.e. So i did
</span><span class='line'><span class="nv">PKG_CONFIG_PATH</span><span class="o">=</span>/usr/local/lib/pkgconfig/ gem install rmagick
</span></code></pre></td></tr></table></div></figure>


<p>things work fine now.</p>

<hr />

<ul>
<li>i got a problem on how to open a port on Red Hat 5.4, finally i found the <a href="http://www.cyberciti.biz/faq/howto-rhel-linux-open-port-using-iptables/">solution</a></li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vi /etc/sysconfig/iptables
</span><span class='line'>...do sth. here
</span><span class='line'>/etc/init.d/iptables restart
</span></code></pre></td></tr></table></div></figure>


<hr />

<ul>
<li>another problem, the version of vim installed on Redhat 5.4 is 7.0, but i want version 7.3, but the repo in system is only 7.0, so i have to compile vim from source.</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget ftp://ftp.vim.org/pub/vim/unix/vim-7.3.tar.bz2
</span><span class='line'>tar jxf vim-7.3.tar.bz2
</span><span class='line'><span class="nb">cd </span>vim73
</span><span class='line'>./configure --enable-cscope --enable-multibyte --enable-xim --enable-fontset --with-features<span class="o">=</span>huge
</span><span class='line'>make;make install
</span><span class='line'>ln -sf <span class="sb">`</span>which vim<span class="sb">`</span> /bin/vi
</span></code></pre></td></tr></table></div></figure>


<p>Fine, the vim 7.3 is installed, and you will find the syntax highlight and other vim-features now work.</p>

<hr />

<ul>
<li>tip: you can execute <code>bundle exec gem uninstall mysql2</code> to remove gem in local vendor.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[configure l2tp VPN on ubuntu VPS]]></title>
    <link href="http://jstdoit.github.io/l2tp-setup-on-ubuntu-vps/"/>
    <updated>2012-11-22T02:47:00+08:00</updated>
    <id>http://jstdoit.github.io/l2tp-setup-on-ubuntu-vps</id>
    <content type="html"><![CDATA[<p>the <a href="http://google.com">Google</a> of my country is sometimes blocked, but my work need that very much. As a coder, how can I tolerate such? as a result, i started my VPN server.
below is my way how to install l2tp/ipsec service on my vps(os backed by Ubuntu 10.04).</p>

<!-- more -->


<ul>
<li>firstly you need the IPSec component for security or auth purpose.</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo aptitude install openswan
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>after install the IPSect, you need to make some change to <code>/etc/ipsec.conf</code>, you can simply change that file with content as follows:</li>
</ul>


<figure class='code'><figcaption><span>/etc/ipsec.conf </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>version 2.0
</span><span class='line'>config setup
</span><span class='line'>    <span class="nv">nat_traversal</span><span class="o">=</span>yes
</span><span class='line'>    <span class="nv">virtual_private</span><span class="o">=</span>%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12
</span><span class='line'>    <span class="nv">oe</span><span class="o">=</span>off
</span><span class='line'>    <span class="nv">protostack</span><span class="o">=</span>netkey
</span><span class='line'>
</span><span class='line'>conn L2TP-PSK-NAT
</span><span class='line'>    <span class="nv">rightsubnet</span><span class="o">=</span>vhost:%priv
</span><span class='line'>    <span class="nv">also</span><span class="o">=</span>L2TP-PSK-noNAT
</span><span class='line'>
</span><span class='line'>conn L2TP-PSK-noNAT
</span><span class='line'>    <span class="nv">authby</span><span class="o">=</span>secret
</span><span class='line'>    <span class="nv">pfs</span><span class="o">=</span>no
</span><span class='line'>    <span class="nv">auto</span><span class="o">=</span>add
</span><span class='line'>    <span class="nv">keyingtries</span><span class="o">=</span>3
</span><span class='line'>    <span class="nv">rekey</span><span class="o">=</span>no
</span><span class='line'>    <span class="nv">ikelifetime</span><span class="o">=</span>8h
</span><span class='line'>    <span class="nv">keylife</span><span class="o">=</span>1h
</span><span class='line'>    <span class="nb">type</span><span class="o">=</span>transport
</span><span class='line'>    <span class="nv">left</span><span class="o">=</span>YOUR.SERVER.IP.ADDRESS
</span><span class='line'>    <span class="nv">leftprotoport</span><span class="o">=</span>17/1701
</span><span class='line'>    <span class="nv">right</span><span class="o">=</span>%any
</span><span class='line'>    <span class="nv">rightprotoport</span><span class="o">=</span>17/%any
</span></code></pre></td></tr></table></div></figure>


<p>then change the file <code>/etc/ipsec.secrets</code> with content as follows:</p>

<figure class='code'><figcaption><span>/etc/ipsec.secrets</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>YOUR.SERVER.IP.ADDRESS   %any:  PSK <span class="s2">&quot;YourSharedSecret&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Important: You should remembter to change <code>YOUR.SERVER.IP.ADDRESS</code> and <code>YourSharedSecret</code> accordingly.</strong>
* Run the following command for <code>openswan</code> to stop complaining</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">for </span>each in /proc/sys/net/ipv4/conf/*
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="k">    </span><span class="nb">echo </span>0 &gt; <span class="nv">$each</span>/accept_redirects
</span><span class='line'>    <span class="nb">echo </span>0 &gt; <span class="nv">$each</span>/send_redirects
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Check if IPSec is correctly setup</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo ipsec verify
</span></code></pre></td></tr></table></div></figure>


<p>make sure all items are correct.</p>

<ul>
<li>now restart <code>openswan</code></li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo /etc/init.d/ipsec restart
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Now you can add a L2TP/IPSec connection on your OS X and see if IPSec is working. Use whatever account and password. We are not there yet. The only thing you need to make sure is that you connect to the right server with the right shared secret as specified in <code>/etc/ipsec.secrets</code> on your server.
Monitor /var/log/system.log on your OS X by running</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tail -f /var/log/system.log
</span></code></pre></td></tr></table></div></figure>


<p>while OS X is trying to connect to your server via L2TP/IPSec. It will fail eventually because we haven’t configured L2TP yet, but if you see a line in the system log saying something like</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Apr 30 18:12:48 bender pppd<span class="o">[</span>1507<span class="o">]</span>: IPSec connection established
</span></code></pre></td></tr></table></div></figure>


<p>Now, everything goes!
* Next big step is to install L2TP, execute command below to install <code>xl2tp</code> for l2tp use:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo aptitude install xl2tpd
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>change the <code>/etc/xl2tpd/xl2tpd.conf</code> file with contents of :</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>global<span class="o">]</span>
</span><span class='line'>ipsec <span class="nv">saref</span> <span class="o">=</span> yes
</span><span class='line'>
</span><span class='line'><span class="o">[</span>lns default<span class="o">]</span>
</span><span class='line'>ip <span class="nv">range</span> <span class="o">=</span> 10.1.2.2-10.1.2.255
</span><span class='line'><span class="nb">local </span><span class="nv">ip</span> <span class="o">=</span> 10.1.2.1
</span><span class='line'>refuse <span class="nv">chap</span> <span class="o">=</span> yes
</span><span class='line'>refuse <span class="nv">pap</span> <span class="o">=</span> yes
</span><span class='line'>require <span class="nv">authentication</span> <span class="o">=</span> yes
</span><span class='line'>ppp <span class="nv">debug</span> <span class="o">=</span> yes
</span><span class='line'><span class="nv">pppoptfile</span> <span class="o">=</span> /etc/ppp/options.xl2tpd
</span><span class='line'>length <span class="nv">bit</span> <span class="o">=</span> yes
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>now create the file <code>/etc/ppp/options.xl2tpd</code> if not exists, contents as follows:</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>require-mschap-v2
</span><span class='line'>ms-dns 8.8.8.8
</span><span class='line'>ms-dns 8.8.4.4
</span><span class='line'>asyncmap 0
</span><span class='line'>auth
</span><span class='line'>crtscts
</span><span class='line'>lock
</span><span class='line'>hide-password
</span><span class='line'>modem
</span><span class='line'>debug
</span><span class='line'>name l2tpd
</span><span class='line'>proxyarp
</span><span class='line'>lcp-echo-interval 30
</span><span class='line'>lcp-echo-failure 4
</span></code></pre></td></tr></table></div></figure>


<p>here we use Google Public DNS in the ms-dns field, if you prefer another one, just feel free to change that.
* now you can add a vpn user to file <code>/etc/ppp/chap-secrets</code> and try to see if l2tp works.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># user      server      password            ip</span>
</span><span class='line'><span class="nb">test        </span>l2tpd       testpassword        *
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>restart <code>xl2tpd</code> via</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo /etc/init.d/xl2tpd restart</span></code></pre></td></tr></table></div></figure>


<ul>
<li>if you use iptables for firewalling, make sure it forwards packets so you can browse the Interent after connecting to VPN. Run the following command</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iptables --table nat --append POSTROUTING --jump MASQUERADE
</span><span class='line'><span class="nb">echo </span>1 &gt; /proc/sys/net/ipv4/ip_forward
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>sometimes the vpn turn out to be stoped by some reasones, so create a file <code>vpn.sh</code> with content as followings and make it executable via <code>chmod u+x vpn.sh</code></li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/usr/bin/env bash</span>
</span><span class='line'>/etc/init.d/ipsec restart
</span><span class='line'>/etc/init.d/xl2tpd restart
</span><span class='line'>iptables --table nat --append POSTROUTING --jump MASQUERADE
</span><span class='line'><span class="nb">echo </span>1 &gt; /proc/sys/net/ipv4/ip_forward
</span></code></pre></td></tr></table></div></figure>


<hr />

<ul>
<li>here i capture some screenshots when i configure L2TP on my MAC.
<img src="http://jstdoit.github.io/images/mac01.png" title="configure l2tp server info." alt="configure l2tp on MAC" />
<img src="http://jstdoit.github.io/images/mac02.png" title="configure l2tp auth info." alt="configure l2tp on MAC" /></li>
<li>and I cound a <a href="http://www.lovessh.com/windows-xp-setup-l2tp-vpn/">solution</a> on Windows xp to configure L2TP</li>
</ul>


<br>


<p>Reference
<a href="http://blog.riobard.com/2010/04/30/l2tp-over-ipsec-ubuntu">Configure L2TP/IPSec VPN on Ubuntu</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开篇]]></title>
    <link href="http://jstdoit.github.io/kai-pian/"/>
    <updated>2012-11-22T02:17:00+08:00</updated>
    <id>http://jstdoit.github.io/kai-pian</id>
    <content type="html"><![CDATA[<p>我之前一直想建自己的博客，然后写点什么教程、心得之类的东西，对后面查询有帮助也对展示自己有点用处。在尝试玩Wordpress多次后发现自己完全不能喜欢上那个玩意儿，功能太多太复杂，我个人用不了.所以每次挂上博客后都闲着，要么是vps过期了，要么是没什么意思把他给删了。直到看老赵的<a href="http://windjs.org">windjs</a>博客的时候发现了ruby开发的这套博客系统，惊呆了，太尼玛适合码农使用了。</p>

<!-- more -->


<p>Octopress使用的是Markdown语法，之前听说过，但一直没用过，要说用过的话也就是github上面简单的写一下README文件。于是下了若干CheetSheet来看，结合者Octopress的文档，发现给代码加高亮的功能简直是太棒了——简洁而美观，甚合我意！</p>

<figure class='code'><figcaption><span>JavaScript </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Hello, world!&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Ruby </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hello, world!&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Objective-C </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Hello, world!&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>C </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello, world!&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
